# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
    tags:
      - '*'
  pull_request:
    branches: [ "master" ]
  

    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
permissions:
  contents: write  # ðŸ”¥ Allows pushing tags and creating releases
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # set up python
      - name:  Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # You can change this version
        
      - name:  Install dependencies
        run: |
          python -m pip install --upgrade pip
         
      # Runs a set of commands using the runners shell
      #- name: Run main.py
      #  run: |
      #   python main.py 

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to fetch all tags

      #- name: Configure Git
      #  run: |
       #   git config user.name "github-actions"
       #   git config user.email "github-actions@github.com"

      - name: Get latest tag and bump
        id: tagger
        run: |
          # Get latest tag or default to v0.0.0
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"

          # Parse version and bump patch
          version=${latest_tag#v}
          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          new_tag="v$major.$minor.$patch"

          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Create Git tag
        run: |
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.new_tag }}
          release_name: Release ${{ env.new_tag }}
          body: |
            Auto-generated release for push to main
          draft: false
          prerelease: false
      
    
